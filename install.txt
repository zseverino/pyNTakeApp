*** Work in Progress***

## Installation
 In order to install and use the PyNTakeApp, there are three basic requirements:
  - File Storage - storing your print files
  - A Relational Database - storing your information
  - A Server - for hosting the app online

 There is a variety of ways to achieve these, so I will provide a list of options for each requirement, alongside an example.
 
#File Storage
  PyNTake uses django-storages (https://pypi.org/project/django-storages/) alongside the built-in django file system to manage storing your files externally. You have a variety of options from which to store your files on:
 - Amazon S3
 - Apache Libcloud
 - Azure Storage
 - Digital Ocean
 - Dropbox
 - FTP
 - Google Cloud Storage
 - SFTP

  Determine what storage platform is best for you. In our usage, we have used Google Cloud Storage and are moving to SFTP. Modify 'settings.py' located in the PyNTakeApp folder, to the specifcations outlined in https://pypi.org/project/django-storages/ for your chosen platform. 
 Ex: Google Cloud Storages
  1. Create a Google Cloud Platform account
  2. Create a Project and a bucket within as the specific location for the files
  3. Create a service account. (
  4. Make sure your service account has access to the bucket and appropriate permissions. (Using IAM Permissions)
  5. Ensure this service account is associated to the type of compute being used (Google Compute Engine (GCE), Google Kubernetes  Engine (GKE), Google Cloud Run (GCR), etc)
  6. Create the key and download your-project-XXXXX.json file.
  7. Add or Modify the following lines at 'settings.py' (Add in your bucket name and json key):
   "DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'"
   "GS_BUCKET_NAME = 'your_bucket_name_here'"
   "GS_CREDENTIALS = path/to/json/key" (If hosting publicly, use environment variables)
